{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/MainTableComponents/ExpensesAndPersons/Expense.js\";\nimport './Expense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expense = props => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.name, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formatter.format(props.cost)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Expense;\nexport default Expense;\nvar _c;\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Expense","props","formatter","Intl","NumberFormat","style","currency","children","name","fileName","_jsxFileName","lineNumber","columnNumber","format","cost","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/MainTableComponents/ExpensesAndPersons/Expense.js"],"sourcesContent":["import './Expense.css'\n\nconst Expense = (props) => {\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        \n        // These options are needed to round to whole numbers if that's what you want.\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n    });\n      \n    return (\n        <div>\n            <span>{props.name}: </span>\n            <span>{formatter.format(props.cost)}</span>\n        </div>\n    )\n}\n\nexport default Expense;"],"mappings":";AAAA,OAAO,eAAe;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAEvB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC7CC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;;IAEV;IACA;IACA;EACJ,CAAC,CAAC;;EAEF,oBACIP,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,GAAON,KAAK,CAACO,IAAI,EAAC,IAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC3Bb,OAAA;MAAAQ,QAAA,EAAOL,SAAS,CAACW,MAAM,CAACZ,KAAK,CAACa,IAAI;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzC;AAEd,CAAC;AAAAG,EAAA,GAjBKf,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}