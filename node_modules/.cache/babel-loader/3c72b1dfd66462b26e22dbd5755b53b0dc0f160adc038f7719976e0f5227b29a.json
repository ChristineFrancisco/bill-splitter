{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXAMPLE_SUSHI_PERSIONS = new Map();\nEXAMPLE_SUSHI_PERSIONS.set('00010', false);\nconst EXAMPLE_EXPENSES = [{\n  id: '00001',\n  name: 'sushi',\n  cost: '$4.23',\n  persons: EXAMPLE_SUSHI_PERSIONS\n}];\nconst EXAMPLE_PERSONS = [{\n  id: '00010',\n  name: 'Christine'\n}];\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES);\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS);\n  const [tax, setTax] = useState(0);\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  const addPersonHandler = person => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons];\n    });\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        console.log(person);\n        prevExpenses[i].persons.set(person.id, false);\n      }\n      return prevExpenses;\n    });\n  };\n  const updateItemEaten = (item, person) => {\n    let newExpenses = expenses.slice();\n    for (let i = 0; i < newExpenses.length; i++) {\n      let currentItem = newExpenses[i];\n      if (currentItem.id === item) {\n        currentItem.persons.set(person, !currentItem.persons.get(person));\n      }\n    }\n    setExpenses(newExpenses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addExpense: addExpenseHandler,\n      addPerson: addPersonHandler,\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainTable, {\n      expenses: expenses,\n      persons: persons,\n      updateItemEaten: updateItemEaten\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qdMDCY4bekKCaFVD9QMclEDq1Gw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","MainTable","jsxDEV","_jsxDEV","EXAMPLE_SUSHI_PERSIONS","Map","set","EXAMPLE_EXPENSES","id","name","cost","persons","EXAMPLE_PERSONS","App","_s","expenses","setExpenses","setPersons","tax","setTax","addExpenseHandler","expense","prevExpenses","addPersonHandler","person","prevPersons","i","length","console","log","updateItemEaten","item","newExpenses","slice","currentItem","get","children","addExpense","addPerson","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\n\nconst EXAMPLE_SUSHI_PERSIONS = new Map();\nEXAMPLE_SUSHI_PERSIONS.set('00010', false);\n\nconst EXAMPLE_EXPENSES = [\n  {\n    id: '00001',\n    name: 'sushi',\n    cost: '$4.23',\n    persons: EXAMPLE_SUSHI_PERSIONS,\n  }\n]\n\nconst EXAMPLE_PERSONS = [\n  {\n    id: '00010',\n    name: 'Christine',\n  }\n]\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES)\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS)\n  const [tax, setTax] = useState(0)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n  }\n\n  const addPersonHandler = (person) => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons]\n    })\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        console.log(person)\n        prevExpenses[i].persons.set(person.id, false)\n      }\n      return prevExpenses\n    })\n  }\n\n  const updateItemEaten = (item, person) => {\n    let newExpenses = expenses.slice()\n\n    for (let i  = 0; i < newExpenses.length; i++) {\n      let currentItem = newExpenses[i]\n      if (currentItem.id === item) {\n        currentItem.persons.set( person, !currentItem.persons.get(person) )\n      }\n    }\n\n    setExpenses(newExpenses)\n  }\n\n  return (\n    <div>\n      <Form \n        addExpense={addExpenseHandler}\n        addPerson={addPersonHandler}\n        persons={persons}\n      />\n      <MainTable \n        expenses={expenses} \n        persons={persons}\n        updateItemEaten={updateItemEaten}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}