{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/Calculations/CalculateTotals.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculateTotals = props => {\n  const determinePercentage = percentageBeforeTaxTip => {\n    if (percentageBeforeTaxTip == 0) {\n      return 0;\n    } else {\n      return Math.floor((percentageBeforeTaxTip - 1) / 0.01);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tax entered: \", determinePercentage(props.tax), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tip entered: \", determinePercentage(props.tip), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = CalculateTotals;\nexport default CalculateTotals;\nvar _c;\n$RefreshReg$(_c, \"CalculateTotals\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CalculateTotals","props","determinePercentage","percentageBeforeTaxTip","Math","floor","children","tax","fileName","_jsxFileName","lineNumber","columnNumber","tip","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/Calculations/CalculateTotals.js"],"sourcesContent":["import React from 'react';\n\nconst CalculateTotals = (props) => {\n    const determinePercentage = (percentageBeforeTaxTip) => {\n        if (percentageBeforeTaxTip == 0) {\n            return 0\n        } else {\n            return Math.floor((percentageBeforeTaxTip - 1) / 0.01)\n        }\n    }\n\n    return (\n        <div>\n            <p>Tax entered: {determinePercentage(props.tax)}%</p>\n            <p>Tip entered: {determinePercentage(props.tip)}%</p>\n        </div>\n    )\n}\n\nexport default CalculateTotals;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAC/B,MAAMC,mBAAmB,GAAIC,sBAAsB,IAAK;IACpD,IAAIA,sBAAsB,IAAI,CAAC,EAAE;MAC7B,OAAO,CAAC;IACZ,CAAC,MAAM;MACH,OAAOC,IAAI,CAACC,KAAK,CAAC,CAACF,sBAAsB,GAAG,CAAC,IAAI,IAAI,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,GAAG,eAAa,EAACJ,mBAAmB,CAACD,KAAK,CAACM,GAAG,CAAC,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACrDZ,OAAA;MAAAO,QAAA,GAAG,eAAa,EAACJ,mBAAmB,CAACD,KAAK,CAACW,GAAG,CAAC,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAEd,CAAC;AAAAE,EAAA,GAfKb,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}