{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/FinalTotals.js\";\nimport EachItemCost from \"./Calculations/EachItemCost\";\nimport FinalPersonTotals from \"./Calculations/FinalPersonTotals\";\nimport CalculateTotals from \"./Calculations/CalculateTotals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EachItemCost, {\n      expenses: props.expenses,\n      persons: props.persons,\n      updateItemCost: props.updateItemCost,\n      updateTotalEaten: props.updateTotalEaten,\n      tip: props.tip,\n      tax: props.tax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalculateTotals, {\n      tip: props.tip,\n      tax: props.tax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FinalPersonTotals, {\n      persons: props.persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["EachItemCost","FinalPersonTotals","CalculateTotals","jsxDEV","_jsxDEV","Form","props","formatter","Intl","NumberFormat","style","currency","children","expenses","persons","updateItemCost","updateTotalEaten","tip","tax","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/components/FinalTotals.js"],"sourcesContent":["import EachItemCost from \"./Calculations/EachItemCost\";\nimport FinalPersonTotals from \"./Calculations/FinalPersonTotals\"\nimport CalculateTotals from \"./Calculations/CalculateTotals\"\n\nconst Form = (props) => {\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n    });\n    \n    return (\n        <div>\n            <EachItemCost \n                expenses={props.expenses}\n                persons={props.persons}\n                updateItemCost={props.updateItemCost}\n                updateTotalEaten={props.updateTotalEaten}\n                tip={props.tip}\n                tax={props.tax}\n            />\n            <CalculateTotals\n                tip={props.tip}\n                tax={props.tax}\n            />\n            <FinalPersonTotals\n                persons={props.persons}\n            />\n        </div>\n    )\n}\n\nexport default Form;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,6BAA6B;AACtD,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,eAAe,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC7CC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;IACV;IACA;IACA;EACJ,CAAC,CAAC;;EAEF,oBACIP,OAAA;IAAAQ,QAAA,gBACIR,OAAA,CAACJ,YAAY;MACTa,QAAQ,EAAEP,KAAK,CAACO,QAAS;MACzBC,OAAO,EAAER,KAAK,CAACQ,OAAQ;MACvBC,cAAc,EAAET,KAAK,CAACS,cAAe;MACrCC,gBAAgB,EAAEV,KAAK,CAACU,gBAAiB;MACzCC,GAAG,EAAEX,KAAK,CAACW,GAAI;MACfC,GAAG,EAAEZ,KAAK,CAACY;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACFlB,OAAA,CAACF,eAAe;MACZe,GAAG,EAAEX,KAAK,CAACW,GAAI;MACfC,GAAG,EAAEZ,KAAK,CAACY;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACFlB,OAAA,CAACH,iBAAiB;MACda,OAAO,EAAER,KAAK,CAACQ;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAAC,EAAA,GA5BKlB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}