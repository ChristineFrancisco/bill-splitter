{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXAMPLE_EXPENSES = [{\n  id: '00001',\n  name: 'sushi',\n  cost: '4.23',\n  persons: [{\n    '00010': false\n  }]\n}];\nconst EXAMPLE_PERSONS = [{\n  id: '00010',\n  name: 'Christine',\n  items: [{\n    '00001': false\n  }]\n}];\nconst PERSONS_INITIALIZER = [{\n  '00001': false\n}];\nconst ITEMS_INITIALIZER = [{\n  '00010': false\n}];\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES);\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS);\n  const [expensesInitializer, setExpensesInitializer] = useState(ITEMS_INITIALIZER);\n  const [personsInitializer, setPersonsInitializer] = useState(PERSONS_INITIALIZER);\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n    setExpensesInitializer(prevExpensesInitializer => {\n      return [expense, ...prevExpensesInitializer];\n    });\n    setPersons(prevPersons => {\n      for (let i = 0; i < prevPersons.length; i++) {\n        prevPersons[i].items.set({\n          expense: false\n        });\n      }\n    });\n  };\n  const addPersonHandler = person => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons];\n    });\n    setExpensesInitializer(prevPersonsInitializer => {\n      return [person, ...prevPersonsInitializer];\n    });\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        prevExpenses[i].persons.push({\n          person: false\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addExpense: addExpenseHandler,\n      addPerson: addPersonHandler,\n      expensesInitializer: expensesInitializer,\n      personsInitializer: personsInitializer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainTable, {\n      expenses: expenses,\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Rrw/2LwGFxcu+v5WjO0wO4+sE0E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","MainTable","jsxDEV","_jsxDEV","EXAMPLE_EXPENSES","id","name","cost","persons","EXAMPLE_PERSONS","items","PERSONS_INITIALIZER","ITEMS_INITIALIZER","App","_s","expenses","setExpenses","setPersons","expensesInitializer","setExpensesInitializer","personsInitializer","setPersonsInitializer","addExpenseHandler","expense","prevExpenses","prevExpensesInitializer","prevPersons","i","length","set","addPersonHandler","person","prevPersonsInitializer","push","children","addExpense","addPerson","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\n\nconst EXAMPLE_EXPENSES = [\n  {\n    id: '00001',\n    name: 'sushi',\n    cost: '4.23',\n    persons: [\n      {'00010': false},\n    ],\n  }\n]\n\nconst EXAMPLE_PERSONS = [\n  {\n    id: '00010',\n    name: 'Christine',\n    items: [\n      {'00001': false},\n    ],\n  }\n]\n\nconst PERSONS_INITIALIZER = [\n  {'00001': false},\n]\n\nconst ITEMS_INITIALIZER = [\n  {'00010': false},\n]\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES);\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS)\n  const [expensesInitializer, setExpensesInitializer] = useState(ITEMS_INITIALIZER)\n  const [personsInitializer, setPersonsInitializer] = useState(PERSONS_INITIALIZER)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n    setExpensesInitializer(prevExpensesInitializer => {\n      return [expense, ...prevExpensesInitializer]\n    })\n    setPersons(prevPersons => {\n      for (let i = 0; i < prevPersons.length; i++) {\n        prevPersons[i].items.set({expense: false})\n      }\n    })\n  }\n\n  const addPersonHandler = (person) => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons]\n    })\n    setExpensesInitializer(prevPersonsInitializer => {\n      return [person, ...prevPersonsInitializer]\n    })\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        prevExpenses[i].persons.push({person: false})\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Form \n        addExpense={addExpenseHandler}\n        addPerson={addPersonHandler}\n        expensesInitializer={expensesInitializer}\n        personsInitializer={personsInitializer}\n      />\n      <MainTable \n        expenses={expenses} \n        persons={persons} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}