{"ast":null,"code":"var _jsxFileName = \"/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXAMPLE_EXPENSES = [{\n  id: '00001',\n  name: 'sushi',\n  cost: '4.23',\n  persons: new Map([['00010', false]])\n}];\nconst EXAMPLE_PERSONS = [{\n  id: '00010',\n  name: 'Christine',\n  items: new Map([['00001', false]])\n}];\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES);\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS);\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n    setPersons(prevPersons => {\n      for (let i = 0; i < prevPersons.length; i++) {\n        prevPersons[i].items.set(expense, false);\n      }\n    });\n  };\n  const addPersonHandler = person => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons];\n    });\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        prevExpenses[i].persons.set(person, false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addExpense: addExpenseHandler,\n      addPerson: addPersonHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainTable, {\n      expenses: expenses,\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0/LqTCuMOlHPQczi5Or2znBL2T4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","MainTable","jsxDEV","_jsxDEV","EXAMPLE_EXPENSES","id","name","cost","persons","Map","EXAMPLE_PERSONS","items","App","_s","expenses","setExpenses","setPersons","addExpenseHandler","expense","prevExpenses","prevPersons","i","length","set","addPersonHandler","person","children","addExpense","addPerson","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineannfrancisco/Documents/repos/bill-splitter/bill-splitter-3/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Form from './components/Form';\nimport MainTable from './components/MainTable';\n\nconst EXAMPLE_EXPENSES = [\n  {\n    id: '00001',\n    name: 'sushi',\n    cost: '4.23',\n    persons: new Map ([\n      ['00010', false],\n    ]),\n  }\n]\n\nconst EXAMPLE_PERSONS = [\n  {\n    id: '00010',\n    name: 'Christine',\n    items: new Map ([\n      ['00001', false],\n    ]),\n  }\n]\n\n//future note: can make items and persons maps that can get updated every add person or add expense handler\n//this would need to update eery time there's a new item or new person added to the list\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXAMPLE_EXPENSES);\n  const [persons, setPersons] = useState(EXAMPLE_PERSONS)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n    setPersons(prevPersons => {\n      for (let i = 0; i < prevPersons.length; i++) {\n        prevPersons[i].items.set(expense, false)\n      }\n    })\n  }\n\n  const addPersonHandler = (person) => {\n    setPersons(prevPersons => {\n      return [person, ...prevPersons]\n    })\n    setExpenses(prevExpenses => {\n      for (let i = 0; i < prevExpenses.length; i++) {\n        prevExpenses[i].persons.set(person, false)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Form \n        addExpense={addExpenseHandler}\n        addPerson={addPersonHandler}   \n      />\n      <MainTable \n        expenses={expenses} \n        persons={persons} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAG,CACvB;EACEC,EAAE,EAAE,OAAO;EACXC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,IAAIC,GAAG,CAAE,CAChB,CAAC,OAAO,EAAE,KAAK,CAAC,CACjB;AACH,CAAC,CACF;AAED,MAAMC,eAAe,GAAG,CACtB;EACEL,EAAE,EAAE,OAAO;EACXC,IAAI,EAAE,WAAW;EACjBK,KAAK,EAAE,IAAIF,GAAG,CAAE,CACd,CAAC,OAAO,EAAE,KAAK,CAAC,CACjB;AACH,CAAC,CACF;;AAED;AACA;;AAEA,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACK,gBAAgB,CAAC;EAC1D,MAAM,CAACI,OAAO,EAAEQ,UAAU,CAAC,GAAGjB,QAAQ,CAACW,eAAe,CAAC;EAEvD,MAAMO,iBAAiB,GAAIC,OAAO,IAAK;IACrCH,WAAW,CAACI,YAAY,IAAI;MAC1B,OAAO,CAACD,OAAO,EAAE,GAAGC,YAAY,CAAC;IACnC,CAAC,CAAC;IACFH,UAAU,CAACI,WAAW,IAAI;MACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,WAAW,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAC3CD,WAAW,CAACC,CAAC,CAAC,CAACV,KAAK,CAACY,GAAG,CAACL,OAAO,EAAE,KAAK,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,gBAAgB,GAAIC,MAAM,IAAK;IACnCT,UAAU,CAACI,WAAW,IAAI;MACxB,OAAO,CAACK,MAAM,EAAE,GAAGL,WAAW,CAAC;IACjC,CAAC,CAAC;IACFL,WAAW,CAACI,YAAY,IAAI;MAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,YAAY,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QAC5CF,YAAY,CAACE,CAAC,CAAC,CAACb,OAAO,CAACe,GAAG,CAACE,MAAM,EAAE,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACH,IAAI;MACH2B,UAAU,EAAEV,iBAAkB;MAC9BW,SAAS,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B,eACF7B,OAAA,CAACF,SAAS;MACRa,QAAQ,EAAEA,QAAS;MACnBN,OAAO,EAAEA;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAAnB,EAAA,CAtCKD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}